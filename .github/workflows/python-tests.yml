name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # 하나의 테스트가 실패해도 다른 테스트는 계속 진행
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        # 테스트할 최소한의 패키지 설치 (tensorflow 제외)
        pip install numpy scipy matplotlib pandas
        # 프로젝트 종속성 설치
        if [ -f requirements.txt ]; then 
          # tensorflow만 제외하고 설치 (CI 환경에서 TensorFlow 설치는 무거울 수 있음)
          pip install $(grep -v "tensorflow" requirements.txt) || pip install -r requirements.txt
        fi
        # 설치된 패키지 목록 출력 (디버깅용)
        pip list
    
    - name: Test with pytest
      run: |
        # -v 플래그로 테스트 실행 과정 자세히 출력
        # --no-header --no-summary 옵션 제거로 더 자세한 정보 출력
        pytest tests/ --cov=./ --cov-report=xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
